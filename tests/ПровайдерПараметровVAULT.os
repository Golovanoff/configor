#использовать "../src/"
#Использовать asserts
#Использовать moskito

&Тест
Процедура ПроверитьПолучениеПараметровИзVault() Экспорт

	// Дано

	СекретыVault = "{
	|	""owner"" : {
	|		""contact"" : {
	|			""email"" : "",
	|			""tel"" : ""77777777""
	|		},
	|		""person"" : {
	|			""address"" : ""Alpha Centauri""
	|		}
	|	},
	|	""admin"" : {
	|		""contact"" : {
	|			""email"" : ""admin.ru"",
	|		}
	|	}
	|}";

	МокСервераVault = Мок.Получить(КоннекторHTTP);
	МокСервераVault.Когда().Get(Новый HTTPЗапрос("v1/my_secret_store/super_secret")).ТогдаВозвращает(СекретыVault);

	НастройкиVault = Новый Структура;
    НастройкиVault.Вставить("Адрес", "https://localhost:3333");
    НастройкиVault.Вставить("Токен", ПолучитьПеременнуюСреды("VAULT_TOKEN"));
    НастройкиVault.Вставить("Запрос", "v1/my_secret_store/super_secret");
	НастройкиVault.Вставить("КоннекторHTTP", МокСервераVault);

    МенеджерПараметров = Новый МенеджерПараметров();
	МенеджерПараметров.ДобавитьПровайдерПараметров(Новый ПровайдерПараметровVAULT());
	МенеджерПараметров.УстановитьНастройкиVault(НастройкиVault);

	// Когда

	МенеджерПараметров.Прочитать();

	// Тогда

	Ожидаем.Что(МенеджерПараметров.Параметр("owner.contact.email")).Равно("mail.ru");
	Ожидаем.Что(МенеджерПараметров.Параметр("owner.contact.tel")).Равно("77777777");
	Ожидаем.Что(МенеджерПараметров.Параметр("owner.person.address")).Равно("Alpha Centauri");
	Ожидаем.Что(МенеджерПараметров.Параметр("admin.contact.email")).Равно("admin.ru");
	Ожидаем.Что(МенеджерПараметров.Параметр("person.address")).ЭтоНеопределено();

КонецПроцедуры
