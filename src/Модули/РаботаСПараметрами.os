#Использовать json

Перем мЧтениеJSON;
Перем мПрочитанныеПараметры;
Перем мОшибкиЧтения;

Перем МассивФайловКонфигурации;
Перем ВнутреннийМенеджерКонфигурации; // Функция _() инициализирует или возвращает эту переменную 

Процедура УстановитьФайлКонфигурации(Знач ПутьКФайлу) Экспорт

	_().УстановитьФайлКонфигурации(ПутьКФайлу);

КонецПроцедуры

Процедура ДобавитьПутьПоиска(Знач ПутьПоискаФайлов) Экспорт

	_().ДобавитьПутьПоиска(ПутьПоискаФайлов);
	
КонецПроцедуры

Функция Параметр(Знач ИмяПараметра, Знач ЗначениеПоУмолчанию = Неопределено) Экспорт
	
	Возврат _().Параметр(ИмяПараметра, ЗначениеПоУмолчанию);

КонецФункции

//
Функция ИспользуемыйФайлКонфигурации() Экспорт
	Возврат _().ИспользуемыйФайлКонфигурации();
КонецФункции

Процедура УстановитьИмяФайлаКонфигурации(Знач ИмяФайла) Экспорт

	_().УстановитьИмяФайлаКонфигурации(ИмяФайла);
	
КонецПроцедуры

Процедура НовыеПараметры(КлассПараметров) Экспорт
	
	ВнутреннийМенеджерКонфигурации = Новый МенеджерЧтенияКонфигурации();
	ВнутреннийМенеджерКонфигурации.ИнициализироватьПоКлассу(КлассПараметров);

КонецПроцедуры

Процедура УстановитьКлассПриемник(КлассПараметров)
	_().УстановитьКлассПриемник(КлассПараметров);
КонецПроцедуры

Процедура Прочитать() Экспорт
	_().Прочитать();
КонецПроцедуры

Функция _()
	Если ВнутреннийМенеджерКонфигурации = Неопределено Тогда
		ВнутреннийМенеджерКонфигурации = Новый МенеджерЧтенияКонфигурации();
	КонецЕсли;
	Возврат ВнутреннийМенеджерКонфигурации;
КонецФункции