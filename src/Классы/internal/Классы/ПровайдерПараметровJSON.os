#Использовать json
#Использовать asserts
#Использовать logos

Перем Лог;
Перем ПрефиксКлючаДляЧтенияВложенногоФайлаНастроек;

#Область ПрограммныйИнтерфейс

Функция Приоритет() Экспорт
	Возврат 1;
КонецФункции

Функция Идентификатор() Экспорт
	Возврат "json";
КонецФункции

Функция ТипПровайдера() Экспорт
	Возврат "file";
КонецФункции

Функция РасширенияФайлов() Экспорт
	Возврат "json";
КонецФункции

// Выполняет чтение параметров 
//
// Параметры:
//   ПараметрыПровайдера - Структура - структура настроек провайдера
// Возвращаемое значение:
//   Соответствие - итоговые параметры
//
Функция ПрочитатьПараметры(ПараметрыПровайдера) Экспорт
	
	ПрочитанныеПараметры = Новый Соответствие;

	ФайлПараметров = Новый Файл(ПараметрыПровайдера.ФайлПараметров);

	Если Не ФайлПараметров.Существует() Тогда
		Лог.Отладка("Не найден файл параметров <%1>", ФайлПараметров.ПолноеИмя);
		Возврат ПрочитанныеПараметры;
	КонецЕсли;

	Лог.Отладка("Выполняю чтение файла параметров <%1>", ФайлПараметров.ПолноеИмя);
	ПрочитанныеПараметры = Прочитать(ФайлПараметров.ПолноеИмя);

	Возврат ПрочитанныеПараметры;

КонецФункции

// Выполнить чтение настроек из файла
//
// Параметры:
//   ПутьКФайлуНастройки - Cтрока - путь к файлу настроек
// Возвращаемое значение:
//   Соответствие - итоговые параметры
//
Функция Прочитать(Знач ПутьКФайлуНастройки)

	НастройкиИзФайла = Новый Соответствие;

	Попытка

		Лог.Отладка("ПутьКФайлуНастройки <%1>", ПутьКФайлуНастройки);

		НастройкиИзФайла = ПрочитатьНастройкиИзПараметраФайл(ПутьКФайлуНастройки);
		
		Лог.Отладка("Итоговые параметры:");
		ПоказатьПараметрыВРежимеОтладки(НастройкиИзФайла);
	
	Исключение
	
		Лог.Ошибка("Ошибка чтения настроек
		|%1", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	
		ВызватьИсключение;
	
	КонецПопытки;

	Возврат НастройкиИзФайла;

КонецФункции // Прочитать

Функция ПрочитатьНастройкиИзПараметраФайл(ПутьКФайлуНастройки)

	ФайлНастроек = Новый Файл(ПутьКФайлуНастройки);

	НастройкиИзФайла = ПрочитатьФайлJSON(ФайлНастроек.ПолноеИмя);

	Возврат НастройкиИзФайла;

КонецФункции // ПрочитатьНастройкиИзПараметраФайл()

Функция ПрочитатьФайлJSON(Знач ИмяФайла)
	Перем Параметры;

	Лог.Отладка("Путь файла настроек <%1>", ИмяФайла);

	СообщениеОшибки = СтрШаблон("Файл настроек не существует. Путь <%1>", ИмяФайла);
	JsonСтрока  = ПрочитатьФайл(ИмяФайла, СообщениеОшибки);

	Лог.Отладка("Текст файла настроек:
	|%1", JsonСтрока);

	JsonСтрока = ВырезатьКомментарииИзТекстаJSON(JsonСтрока);

	ПарсерJSON  = Новый ПарсерJSON();
	Параметры   = ПарсерJSON.ПрочитатьJSON(JsonСтрока);
	
	Возврат Параметры;
КонецФункции

Функция ПрочитатьФайл(Знач ИмяФайла, Знач СообщениеОшибки)
	ФайлСуществующий = Новый Файл(ИмяФайла);
	Если Не ФайлСуществующий.Существует() Тогда
		ВызватьИсключение СообщениеОшибки;
	КонецЕсли;

	Чтение = Новый ЧтениеТекста(ИмяФайла, КодировкаТекста.UTF8);
	Рез  = Чтение.Прочитать();
	Чтение.Закрыть();
	Возврат Рез;
КонецФункции // ПрочитатьФайл()

Функция ВырезатьКомментарииИзТекстаJSON(Знач JsonСтрока)

	// вырезаем обычные комменты типа "// комментарий"
	Регулярка = Новый РегулярноеВыражение("(^\/\/.*$)");
	Рез = Регулярка.Заменить(JsonСтрока, "$0" );

	// вырезаем комменты после строки, например, "строка //комментарий"
	Регулярка = Новый РегулярноеВыражение("(^.*)(\/\/.*$)");
	Рез = Регулярка.Заменить(Рез, "$1" );

	Возврат Рез;
КонецФункции // ВырезатьКомментарииИзТекстаJSON()


Процедура ПоказатьПараметрыВРежимеОтладки(ЗначенияПараметров, Знач Родитель = "")
	
	Если Родитель = "" Тогда
		Лог.Отладка("	Тип параметров %1", ТипЗнч(ЗначенияПараметров));
	КонецЕсли;
	
	Если ЗначенияПараметров.Количество() = 0 Тогда
		Лог.Отладка("	Коллекция параметров пуста!");
	КонецЕсли;

	Для каждого Элемент Из ЗначенияПараметров Цикл
		
		ПредставлениеКлюча = Элемент.Ключ;
		
		Если Не ПустаяСтрока(Родитель) Тогда
			ПредставлениеКлюча  = СтрШаблон("%1.%2", Родитель, ПредставлениеКлюча);
		КонецЕсли;
		
		Лог.Отладка("	Получен параметр <%1> = <%2>", ПредставлениеКлюча, Элемент.Значение);
		
		Если ТипЗнч(Элемент.Значение) = Тип("Соответствие") Тогда
			ПоказатьПараметрыВРежимеОтладки(Элемент.Значение, ПредставлениеКлюча);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Лог = Логирование.ПолучитьЛог("oscript.lib.configor.json");
