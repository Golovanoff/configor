// Реализация шагов BDD-фич/сценариев c помощью фреймворка https://github.com/artbear/1bdd
#Использовать asserts

Перем БДД; //контекст фреймворка 1bdd

// Метод выдает список шагов, реализованных в данном файле-шагов
Функция ПолучитьСписокШагов(КонтекстФреймворкаBDD) Экспорт
	БДД = КонтекстФреймворкаBDD;

	ВсеШаги = Новый Массив;

	ВсеШаги.Добавить("ЯСоздаюМенеджерпараметровИСохраняюЕгоВКонтекст");
	ВсеШаги.Добавить("ЯУстанавливаюАвтонастройкиСПараметрами");
	ВсеШаги.Добавить("ЯВыполняюЧтениеПараметров");
	ВсеШаги.Добавить("ЗначениеПараметраРавно");
	ВсеШаги.Добавить("КоличествоЗначенияПараметраРавно");

	Возврат ВсеШаги;
КонецФункции

// Реализация шагов

// Процедура выполняется перед запуском каждого сценария
Процедура ПередЗапускомСценария(Знач Узел) Экспорт
	
КонецПроцедуры

// Процедура выполняется после завершения каждого сценария
Процедура ПослеЗапускаСценария(Знач Узел) Экспорт
	
КонецПроцедуры

//Я создаю МенеджерПараметров и сохраняю его в контекст
Процедура ЯСоздаюМенеджерПараметровИСохраняюЕгоВКонтекст() Экспорт
	
	МенеджерПараметров = Новый МенеджерПараметров;
	БДД.СохранитьВКонтекст("МенеджерПараметров", МенеджерПараметров);

КонецПроцедуры

//Я устанавливаю АвтоНастройки с параметрами
//| config |
//| ''     |
//| yaml   |
Процедура ЯУстанавливаюАвтонастройкиСПараметрами(Знач ТаблицаПараметров) Экспорт
	
	МенеджерПараметров = БДД.ПолучитьИзКонтекста("МенеджерПараметров");
	МенеджерПараметров.АвтоНастройка(ТаблицаПараметров[0][0], ТаблицаПараметров[1][0], ТаблицаПараметров[2][0]);

КонецПроцедуры

//Я выполняю чтение параметров
Процедура ЯВыполняюЧтениеПараметров() Экспорт
	
	МенеджерПараметров = БДД.ПолучитьИзКонтекста("МенеджерПараметров");
	МенеджерПараметров.Прочитать();

КонецПроцедуры

//Значение параметра "build.binary" равно "test-app"
Процедура ЗначениеПараметраРавно(Знач ИмяПараметра, Знач ТребуемоеЗначениеПараметра) Экспорт

	МенеджерПараметров = БДД.ПолучитьИзКонтекста("МенеджерПараметров");

	ЗначениеПараметра = МенеджерПараметров.Параметр(ИмяПараметра);
	Утверждения.ПроверитьРавенство(ЗначениеПараметра, ТребуемоеЗначениеПараметра, "Результат должен совпадать с ожиданиями");

КонецПроцедуры

//Количество значения параметра "changelog.filters.include" равно "4"
Процедура КоличествоЗначенияПараметраРавно(Знач ИмяПараметра, Знач ТребуемоеЗначениеПараметра) Экспорт

	МенеджерПараметров = БДД.ПолучитьИзКонтекста("МенеджерПараметров");

	ЗначениеПараметра = МенеджерПараметров.Параметр(ИмяПараметра);
	Утверждения.ПроверитьРавенство(ЗначениеПараметра.Количество(), Число(ТребуемоеЗначениеПараметра), "Результат должен совпадать с ожиданиями");

КонецПроцедуры

