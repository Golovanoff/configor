#Использовать asserts
#Использовать logos
#Использовать 1connector

Перем Лог;

#Область ПрограммныйИнтерфейс

// Возвращает приоритет провайдера
//
//  Возвращаемое значение:
//   Число - текущий приоритет провайдера
//
Функция Приоритет() Экспорт
	Возврат 1;
КонецФункции

// Возвращает идентификатор провайдера
//
//  Возвращаемое значение:
//   Строка - текущий идентификатор провайдера
//
Функция Идентификатор() Экспорт
	Возврат "vault";
КонецФункции

// Возвращает тип провайдера
//
//  Возвращаемое значение:
//   Строка - текущий тип провайдера
//
Функция ТипПровайдера() Экспорт
	Возврат "vault";
КонецФункции

// Выполняет чтение параметров для провайдера
//
// Параметры:
//   НастройкиПровайдера - Структура - структура настроек провайдера
//
//  Возвращаемое значение:
//   Соответствие - результат чтения провайдера
//
Функция ПрочитатьПараметры(Знач НастройкиПровайдера) Экспорт

	ПрочитанныеПараметры = Новый Соответствие;

	Адрес = НастройкиПровайдера.Адрес;
	Токен = НастройкиПровайдера.Токен;
	Запрос = НастройкиПровайдера.Запрос;

	Если Не ЗначениеЗаполнено(Адрес) Тогда
		Лог.Отладка("Не указан адрес сервера. Чтение невозможно");
		Возврат ПрочитанныеПараметры;
	КонецЕсли;

	Лог.Отладка("Выполняю чтение файла параметров из <%1>/%2", Адрес, Запрос);
	ПрочитанныеПараметры = Прочитать(Адрес, Токен, Запрос);

	Возврат ПрочитанныеПараметры;
КонецФункции

#КонецОбласти

// Выполнить чтение настроек из vault
//
// Параметры:
//   Адрес - Cтрока - URL сервера vault
//   Токен - Cтрока - токен авторизации
//   Запрос - Cтрока - путь  к данным vault
// Возвращаемое значение:
//   Соответствие - итоговые параметры
//
Функция Прочитать(Знач Адрес, Знач Токен, Знач Запрос)

	Настройки = Новый Соответствие;

	Попытка

		URL = СтрШаблон("%1/%2", Адрес, Запрос);
		
		Заголовки = Новый Соответствие;
		Заголовки.Вставить("Authorization", СтрШаблон("Bearer %1", Токен));

		ДопПараметры = Новый Структура("Заголовки", Заголовки);
		
		Настройки = КоннекторHTTP.Get(URL, , ДопПараметры).Json()["data"];

		Лог.Отладка("Итоговые параметры:");
		ПоказатьПараметрыВРежимеОтладки(Настройки);

	Исключение

		Лог.Ошибка("Ошибка чтения настроек
		|%1", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));

		ВызватьИсключение;

	КонецПопытки;

	Возврат Настройки;

КонецФункции

Процедура ПоказатьПараметрыВРежимеОтладки(ЗначенияПараметров)

	ПроцессорВывода = Новый ВыводВРежимеОтладки(Лог);
	ПроцессорВывода.ПоказатьНастройкиВРежимеОтладки(ЗначенияПараметров);

КонецПроцедуры

Лог = Логирование.ПолучитьЛог("oscript.lib.configor.vault");
