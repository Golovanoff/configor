Перем ТекущийПрефиксКлючаДляЧтенияВложенногоФайлаНастроек;

// Создает нового менеджера параметров
//
// Параметры:
//   ИмяФайлаПараметров      - Строка - имя файла параметров
//   КаталогПоиска           - Строка - дополнительный каталог поиска параметров
//   Провайдер               - Строка - перечень провайдеров (по умолчанию "json;yaml")
//   КлассПараметров         - Класс  - класс приемник результат чтения параметров
// Возвращаемое значение
//   Класс - инстанс класса МенеджерПараметров
//
Функция НовыйМенеджерПараметров(ИмяФайлаПараметров,
								КаталогПоиска = "",
								Провайдер = "json;yaml",
								КлассПараметров = Неопределено) Экспорт

	МенеджерПараметров = Новый МенеджерПараметров(Провайдер);

	МенеджерПараметров.УстановитьИмяФайла(ИмяФайлаПараметров);

	Если ЗначениеЗаполнено(КаталогПоиска) Тогда
		МенеджерПараметров.ДобавитьКаталогПоиска(КаталогПоиска);
	КонецЕсли;

	Если ЗначениеЗаполнено(КлассПараметров) Тогда
		МенеджерПараметров.УстановитьКлассПриемник(КлассПараметров);
	КонецЕсли;

	Возврат МенеджерПараметров;

КонецФункции

// Устанавливаетпрефикс ключа для чтения вложенных файлов
// (по умолчанию <ReadFile>)
//
// Параметры:
//   НовыйПрефикс - Строка - префикс ключа для чтения вложенных файлов
//
Процедура УстановитьПрефиксКлючаДляЧтенияВложенногоФайлаНастроек(Знач НовыйПрефикс) Экспорт
	ТекущийПрефиксКлючаДляЧтенияВложенногоФайлаНастроек = НовыйПрефикс;
КонецПроцедуры

Функция ПрефиксКлючаДляЧтенияВложенногоФайлаНастроек() Экспорт
	Возврат ТекущийПрефиксКлючаДляЧтенияВложенногоФайлаНастроек;
КонецФункции

ТекущийПрефиксКлючаДляЧтенияВложенногоФайлаНастроек = "ReadFile";