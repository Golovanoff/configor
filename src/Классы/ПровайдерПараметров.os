#Использовать reflector

Перем ТипПровайдера Экспорт; // Файл, Произвольный
Перем Приоритет Экспорт; // Число
Перем Идентификатор Экспорт; // Строка

Перем КлассПровайдера;
Перем Настройки;
Перем РеализованИнтерфейсЗаписи;
Перем РеализованИнтерфейсЧтения;

Функция ПрочитатьПараметры(Знач НастройкиПровайдера) Экспорт

	Если НЕ РеализованИнтерфейсЧтения Тогда
		Возврат Новый Соответствие;
	КонецЕсли;

	Возврат КлассПровайдера.ПрочитатьПараметры(НастройкиПровайдера);
	
КонецФункции

Процедура ЗаписатьПараметры(Знач НастройкиПровайдера) Экспорт

	Если НЕ РеализованИнтерфейсЗаписи Тогда
		Возврат;
	КонецЕсли;

	КлассПровайдера.ЗаписатьПараметры(НастройкиПровайдера);
	
КонецПроцедуры

Процедура ПриСозданииОбъекта(Знач ВходящийКлассПровайдера, Знач ВходящийТипПровайдера)
	
	ИнтерфейсПровайдера = Новый ИнтерфейсОбъекта;
	ИнтерфейсПровайдера.Ф("Приоритет");
	ИнтерфейсПровайдера.Ф("Идентификатор");
	// ИнтерфейсПровайдера.Ф("ОписаниеПровайдера"); TODO: Определить надо ли??

	ИнтерфейсЧтения = Новый ИнтерфейсОбъекта;
	ИнтерфейсЧтения.Ф("ПрочитатьПараметры", 1);

	ИнтерфейсЗаписи = Новый ИнтерфейсОбъекта;
	ИнтерфейсЗаписи.Ф("ЗаписатьПараметры", 1);

	РефлекторОбъекта = Новый РефлекторОбъекта(ВходящийКлассПровайдера);
	
	РеализованИнтерфейсЧтения = РефлекторОбъекта.РеализуетИнтерфейс(ИнтерфейсЧтения);
	РеализованИнтерфейсЗаписи = РефлекторОбъекта.РеализуетИнтерфейс(ИнтерфейсЗаписи);
	РеализованИнтерфейсПровайдера = РефлекторОбъекта.РеализуетИнтерфейс(ИнтерфейсПровайдера);

	ПроверкаПровайдера = РеализованИнтерфейсПровайдера 
							И (РеализованИнтерфейсЧтения 
							ИЛИ РеализованИнтерфейсЗаписи);
	
	КлассПровайдера = ВходящийКлассПровайдера;

	Если НЕ ПроверкаПровайдера Тогда
		// TODO: Добавить описание того что реализовано а что нет
		ВызватьИсключение "Не реализован необходимый интерфейс провайдера";
	КонецЕсли;

	ТипПровайдера = ВходящийТипПровайдера;
	Приоритет = КлассПровайдера.Приоритет();
	Идентификатор = КлассПровайдера.Идентификатор();
	
КонецПроцедуры