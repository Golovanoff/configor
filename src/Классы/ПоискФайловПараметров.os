Перем ИндексКаталоговПоиска; // Упорядоченный массив 

Процедура Добавить()
	
	ДобавитьКаталогПоиска(ТекущийКаталог());
	ДобавитьКаталогПоиска(СистемнаяИнформация.ПолучитьПутьПапки(СпециальнаяПапка.ЛокальныйКаталогДанныхПриложений));
	ДобавитьКаталогПоиска(СистемнаяИнформация.ПолучитьПутьПапки(СпециальнаяПапка.ПрофильПользователя));

КонецПроцедуры

Функция Поиск(КаталогиПоиска, ИмяФайлаПараметров, РасширениеФайлаПараметров)

	РасширениеФайлов = ".json";

	Если ЗначениеЗаполнено(РасширениеФайлаПараметров) Тогда
		
		РасширениеФайлов = РасширениеФайлаПараметров;

	КонецЕсли;

	МассивИменФайлов = Новый Массив;
	МассивРасширений = СтрРазделить(РасширениеФайлов, ";", Ложь);

	Для каждого РасширениеФайла Из МассивРасширений Цикл
		
		Если Не СтрНачинаетсяС(РасширениеФайла, ".") Тогда
			РасширениеФайла = "." + РасширениеФайла;
		КонецЕсли;

		МассивИменФайлов.Добавить(ИмяФайлаПараметров + РасширениеФайла);

	КонецЦикла;

	НайденныйФайл = Неопределено;

	Для каждого ПутьПоиска Из КаталогиПоиска Цикл

		Лог.Отладка("  поиск в каталоге <%1>", ПутьПоиска);

		Для каждого ФайлПоиска Из МассивИменФайлов Цикл

			ФайлПараметровПоиска = Новый Файл(ОбъединитьПути(ПутьПоиска, ФайлПоиска));

			Лог.Отладка("    ищю файл <%1>", ОбъединитьПути(ПутьПоиска, ФайлПоиска));
	
			Если Не ФайлПараметровПоиска.Существует() Тогда
				Продолжить;
			КонецЕсли;

			НайденныйФайл = ФайлПараметровПоиска.ПолноеИмя;
			Прервать;

		КонецЦикла;

		Если Не НайденныйФайл = Неопределено Тогда
			
			Лог.Отладка("Использую файл параметров <%1>", НайденныйФайл);
			Прервать;
			
		КонецЕсли;

	КонецЦикла;

	Возврат НайденныйФайл;

КонецФункции
