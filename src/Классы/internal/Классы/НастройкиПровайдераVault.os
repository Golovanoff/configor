
Перем Адрес; // Строка
Перем Токен; // Строка
Перем Запрос; // Строка

#Область Публичное_API

// Устанавливает путь к корню API
//
// Параметры:
//   АдресАпи - Строка - URL сервера + корень API
//
//  Возвращаемое значение:
//   Объект.НастройкиПровайдераVault - ссылка на текущий элемент класса <НастройкиПровайдераVault>
//
Функция УстановитьАдрес(Знач АдресАпи) Экспорт
	Адрес = АдресАпи;
	Возврат ЭтотОбъект;
КонецФункции

// Устанавливает токен авторизации
//
// Параметры:
//   ТокенАвторизации - Строка - токен авторизации
//
//  Возвращаемое значение:
//   Объект.НастройкиПровайдераVault - ссылка на текущий элемент класса <НастройкиПровайдераVault>
//
Функция УстановитьТокен(Знач ТокенАвторизации) Экспорт
	Токен = ТокенАвторизации;
	Возврат ЭтотОбъект;
КонецФункции

// Устанавливает путь к корню API
//
// Параметры:
//   УРЛЗапроса - Строка - URL запроса данных vault
//
//  Возвращаемое значение:
//   Объект.НастройкиПровайдераVault - ссылка на текущий элемент класса <НастройкиПровайдераVault>
//
Функция УстановитьЗапрос(Знач УРЛЗапроса) Экспорт
	Запрос = УРЛЗапроса;
	Возврат ЭтотОбъект;
КонецФункции

// Возвращает структуру настроек провайдера
//
//  Возвращаемое значение:
//   Структура - подготовленная структура настроек для файловых провайдеров
//    * Адрес - Строка - путь к API
//    * Токен - Строка - токен авторизации
//    * Запрос - Строка - путь к данным vault
//
Функция ПолучитьНастройки() Экспорт

	Настройка = Новый Структура();
	Настройка.Вставить("Адрес", Адрес);
	Настройка.Вставить("Токен", Токен);
	Настройка.Вставить("Запрос", Запрос);
	
	Возврат Настройка;
КонецФункции

#КонецОбласти

#Область Вспомогательные_процедуры_и_функции

#КонецОбласти
