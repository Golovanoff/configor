
Перем ПутьКФайлуПараметров; // Строка
Перем КаталогиПоиска; // Массив
Перем РасширенияФайлаПараметров; // Массив
Перем НаименованияФайлаПараметров; // Массив
Перем НаправлениеСортировкиКаталогов; // Строка
Перем ЧитатьТолькоОдинФайл; // Булево

// Устанавливает путь к файлу параметров
//
// Параметры:
//   ПутьКФайлу - Строка - полный путь к файлу параметров
//
//  Возвращаемое значение:
//   Объект.НастройкиФайловогоПровайдера - ссылка на текущий элемент класса <НастройкиФайловогоПровайдера>
//
Функция УстановитьФайлПараметров(Знач ПутьКФайлу) Экспорт

	ПутьКФайлуПараметров = ПутьКФайлу;

	ЧитатьТолькоОдинФайл = Истина;

	Возврат ЭтотОбъект;

КонецФункции

// Устанавливает дополнительную строку добавляемую к каталогам поиска
//
// Параметры:
//   ИмяВложенногоКаталогаПоиска - Строка - дополнительная строка, добавляемая к каталогам поиска
//
//  Возвращаемое значение:
//   Объект.НастройкиФайловогоПровайдера - ссылка на текущий элемент класса <НастройкиФайловогоПровайдера>
//
Функция УстановитьВложенныйКаталогПоиска(Знач ИмяВложенногоКаталогаПоиска) Экспорт

	// TODO: Сделать добавление
	Возврат ЭтотОбъект;

КонецФункции

// Возвращает структуру настроек провайдера
//
//  Возвращаемое значение:
//   Структура - подготовленная структура настроек для файловых провайдеров
//
Функция ПолучитьНастройки() Экспорт

	Настройка = Новый Структура();
	Настройка.Вставить("ПутьКФайлуПараметров", ПутьКФайлуПараметров);
	Настройка.Вставить("КаталогиПоиска", КаталогиПоиска);
	Настройка.Вставить("ПервичныйКаталогПараметров", КаталогиПоиска[0]);
	Настройка.Вставить("ВторичныйКаталогПараметров", КаталогиПоиска[1]);
	Настройка.Вставить("НаименованияФайлаПараметров", НаименованияФайлаПараметров);
	Настройка.Вставить("РасширенияФайлаПараметров", РасширенияФайлаПараметров); 
	Настройка.Вставить("НаправлениеСортировки", НаправлениеСортировкиКаталогов); 
	Настройка.Вставить("ЧитатьТолькоОдинФайл", ЧитатьТолькоОдинФайл); 
	
	Возврат Настройка;

КонецФункции

// Добавляет дополнительный путь к каталогу поиска файла параметров
//
// Параметры:
//   ПутьПоискаФайлов - Строка - полный путь к дополнительному каталогу для поиска файла параметров
//
//  Возвращаемое значение:
//   Объект.НастройкиФайловогоПровайдера - ссылка на текущий элемент класса <НастройкиФайловогоПровайдера>
//
Функция ДобавитьКаталогПоиска(Знач ПутьПоискаФайлов) Экспорт

	КаталогиПоиска.Добавить(ПутьПоискаФайлов);

	Возврат ЭтотОбъект;

КонецФункции

// Выполняет очистку путей поиска
//
//  Возвращаемое значение:
//   Объект.НастройкиФайловогоПровайдера - ссылка на текущий элемент класса <НастройкиФайловогоПровайдера>
//
Функция ОчиститьПутиПоиска() Экспорт

	КаталогиПоиска.Очистить();

	Возврат ЭтотОбъект;

КонецФункции

// Добавляет имя файла параметров
//
// Параметры:
//   ИмяФайла - Строка - имя файла параметров
//
//  Возвращаемое значение:
//   Объект.НастройкиФайловогоПровайдера - ссылка на текущий элемент класса <НастройкиФайловогоПровайдера>
//
Функция УстановитьИмяФайла(Знач ИмяФайла) Экспорт

	НаименованияФайлаПараметров.Добавить(ИмяФайла);

	Возврат ЭтотОбъект;

КонецФункции

// Устанавливает расширение файла параметров
//
// Параметры:
//   РасширениеФайла - Строка - расширение файла параметров (например, .json или json)
//
//  Возвращаемое значение:
//   Объект.НастройкиФайловогоПровайдера - ссылка на текущий элемент класса <НастройкиФайловогоПровайдера>
//
Функция УстановитьРасширениеФайла(Знач РасширениеФайла) Экспорт

	Если Не СтрНачинаетсяС(РасширениеФайла, ".") Тогда
		РасширениеФайла = "." + РасширениеФайла;
	КонецЕсли;

	РасширенияФайлаПараметров.Добавить(РасширениеФайла);

	Возврат ЭтотОбъект;

КонецФункции

// Устанавливает стандартные каталоги поиска
//
// Параметры:
//   ВложенныйПодкаталог - Строка - дополнительная строка, добавляемая к каталогам поиска
//
//  Возвращаемое значение:
//   Объект.НастройкиФайловогоПровайдера - ссылка на текущий элемент класса <НастройкиФайловогоПровайдера>
//
Функция УстановитьСтандартныеКаталогиПоиска(Знач ВложенныйПодкаталог = "") Экспорт

	СистемнаяИнформация = Новый СистемнаяИнформация;

	ДобавитьКаталогПоиска(ТекущийКаталог());
	ДобавитьКаталогПоиска(СистемнаяИнформация.ПолучитьПутьПапки(СпециальнаяПапка.ПрофильПользователя));
	ДобавитьКаталогПоиска(СистемнаяИнформация.ПолучитьПутьПапки(СпециальнаяПапка.ЛокальныйКаталогДанныхПриложений));
	
	Если ЗначениеЗаполнено(ВложенныйПодкаталог) Тогда
		УстановитьВложенныйКаталогПоиска(ВложенныйПодкаталог);
	КонецЕсли;

	Возврат ЭтотОбъект;

КонецФункции

Процедура ПриСозданииОбъекта(ИспользоватьСтандартныеКаталогиПоиска = Ложь, ВложенныйПодкаталог = "")

	НаименованияФайлаПараметров = Новый Массив;
	РасширенияФайлаПараметров = Новый Массив;
	КаталогиПоиска = Новый Массив;

	НаправлениеСортировкиКаталогов = "УБЫВ";
	ЧитатьТолькоОдинФайл = Ложь;

	Если ИспользоватьСтандартныеКаталогиПоиска = Истина Тогда
		УстановитьСтандартныеКаталогиПоиска(ВложенныйПодкаталог);
	КонецЕсли;

КонецПроцедуры
